{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","length","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","target","noteObj","Date","toISOString","Math","random","value","onChange","type","ReactDOM","render","document","getElementById"],"mappings":"kNAaiBA,EAXJ,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEpD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCgB7B,EArBA,WACb,IAAMK,EAAUC,IAAMC,IAHR,cAIRC,EAAc,CAClBC,GAAI,IACJN,QAAS,mCACTO,KAAM,2BACNT,WAAW,GAEb,OAAOI,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAaxC,EAVA,SAAAO,GAEb,OADgBT,IAAMU,KAdR,aAcsBD,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACJ,EAAIM,GAElB,OADgBT,IAAMW,IAAN,UAnBF,aAmBE,YAAwBR,GAAMM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCP5BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,yBAAKjB,UAAU,SACZiB,IC6EUC,EAjFL,SAACC,GAAW,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEWF,mBAAS,iBAFpB,mBAEZG,EAFY,KAEHC,EAFG,OAGWJ,oBAAS,GAHpB,mBAGZK,EAHY,KAGHC,EAHG,OAIqBN,mBAAS,MAJ9B,mBAIZO,EAJY,KAIEC,EAJF,KAMnBC,qBAAU,WACRC,QAAQC,IAAI,UACZC,IACGvB,MAAK,SAAAwB,GACJH,QAAQC,IAAIE,GACZX,EAASW,QAEZ,IACHH,QAAQC,IAAI,UAAWV,EAAMa,OAAQ,UAErC,IAsCMC,EAAcV,EAAUJ,EAAQA,EAAMe,QAAO,SAAAxC,GAAI,OAAIA,EAAKG,aAEhE,OACE,6BACE,qCACA,kBAAC,EAAD,CAAckB,QAASU,IACvB,6BACE,4BAAQzB,QAAS,kBAAMwB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGU,EAAYE,KAAI,SAAAzC,GAAI,OACnB,kBAAC,EAAD,CAAM0C,IAAK1C,EAAKW,GACdX,KAAMA,EACNC,iBAAkB,kBAnCD,SAACU,GAC1B,IAAMX,EAAOyB,EAAMkB,MAAK,SAAAC,GAAC,OAAIA,EAAEjC,KAAOA,KAChCkC,EAAW,2BAAQ7C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDiC,EAAmBzB,EAAIkC,GACpBhC,MAAK,SAAAiC,GACJpB,EAASD,EAAMgB,KAAI,SAAAzC,GAAI,OAAIA,EAAKW,KAAOA,EAAKX,EAAO8C,SAEpDC,OAAM,SAAAC,GACLhB,EAAgB,aAAD,OAAchC,EAAKK,QAAnB,0CACf4C,YAAW,kBAAMjB,EAAgB,QAAO,KACxCN,EAASD,EAAMe,QAAO,SAAAxC,GAAI,OAAIA,EAAKW,KAAOA,SAwBduC,CAAmBlD,EAAKW,WAItD,0BAAMwC,SAzDM,SAACC,GACfA,EAAMC,iBACNnB,QAAQC,IAAI,iBAAkBiB,EAAME,QAEpC,IAAMC,EAAU,CACdlD,QAASsB,EACTf,MAAM,IAAI4C,MAAOC,cACjBtD,UAAWuD,KAAKC,SAAW,GAC3BhD,GAAIc,EAAMa,OAAS,GAGrBF,EAAmBmB,GAChB1C,MAAK,SAAAiC,GACJlB,EAAW,IACXF,EAASD,EAAMT,OAAO8B,SA4CtB,2BAAOc,MAAOjC,EAASkC,SAzBP,SAACT,GACrBlB,QAAQC,IAAIiB,EAAME,OAAOM,OACzBhC,EAAWwB,EAAME,OAAOM,UAwBpB,4BAAQE,KAAK,UAAb,W,MC3EVC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.843b6ceb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? 'make not important' : 'make important'\r\n\r\n    return (\r\n      <li className='note'>\r\n        {note.content}\r\n        <button onClick={toggleImportance}>{label}</button>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  export default Note\r\n","import axios from 'axios'\r\nconst baseURL = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseURL)\r\n  const nonExisting = {\r\n    id: 10000,\r\n    content: 'This note is not saved to server',\r\n    date: '2019-05-30T17:30:31.098Z',\r\n    important: true,\r\n  }\r\n  return request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseURL, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseURL}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n  getAll: getAll,\r\n  create: create,\r\n  update: update\r\n}","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification;","import React, {useState, useEffect} from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = (props) => {\r\n    const [notes, setNotes] = useState([])\r\n    const [newNote, setNewNote] = useState('a new note...')\r\n    const [showAll, setShowAll] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    useEffect(() => {\r\n      console.log('Effect')\r\n      noteService.getAll()\r\n        .then(initialNotes => {\r\n          console.log(initialNotes)\r\n          setNotes(initialNotes)\r\n        })\r\n    }, [])\r\n    console.log(\"Render \", notes.length, \" notes\")\r\n\r\n    const addNote = (event) => {\r\n      event.preventDefault()\r\n      console.log('button clicked', event.target)\r\n\r\n      const noteObj = {\r\n        content: newNote,\r\n        date: new Date().toISOString(),\r\n        important: Math.random() < 0.5,\r\n        id: notes.length + 1\r\n      }\r\n\r\n      noteService.create(noteObj)\r\n        .then(returnedNote => {\r\n          setNewNote('')\r\n          setNotes(notes.concat(returnedNote))\r\n        })\r\n    }\r\n\r\n    const toggleImportanceOf = (id) => {\r\n      const note = notes.find(n => n.id === id)\r\n      const changedNote = { ...note, important: !note.important }\r\n\r\n      noteService.update(id, changedNote)\r\n        .then(returnedNote => {\r\n          setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage(`The note '${note.content}' was already deleted from the server`)\r\n          setTimeout(() => setErrorMessage(null), 5000)\r\n          setNotes(notes.filter(note => note.id !== id))\r\n        })\r\n    }\r\n\r\n    const handleNewNote = (event) => {\r\n      console.log(event.target.value)\r\n      setNewNote(event.target.value)\r\n    }\r\n\r\n    const notesToShow = showAll ? notes : notes.filter(note => note.important)\r\n  \r\n    return (\r\n      <div>\r\n        <h1>Notes</h1>\r\n        <Notification message={errorMessage}/>\r\n        <div>\r\n          <button onClick={() => setShowAll(!showAll)}>\r\n            show {showAll ? 'important' : 'all'}\r\n          </button>\r\n        </div>\r\n        <ul>\r\n          {notesToShow.map(note => \r\n            <Note key={note.id} \r\n              note={note}\r\n              toggleImportance={() => toggleImportanceOf(note.id)}\r\n            />\r\n          )}\r\n        </ul>\r\n        <form onSubmit={addNote}>\r\n          <input value={newNote} onChange={handleNewNote}/>\r\n          <button type='submit'>save</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n/*import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nconst notes = [\n  {\n    id: 1,\n    content: 'HTML is easy',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  },\n  {\n    id: 2,\n    content: 'Browser can execute only Javascript',\n    date: '2019-05-30T18:39:34.091Z',\n    important: false\n  },\n  {\n    id: 3,\n    content: 'GET and POST are the most important methods of HTTP protocol',\n    date: '2019-05-30T19:20:14.298Z',\n    important: true\n  }\n]\n\nReactDOM.render(\n  <App notes={notes} />,\n  document.getElementById('root')\n)*/"],"sourceRoot":""}